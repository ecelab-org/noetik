[tool.poetry]
name = "noetik"
version = "0.1.0"
description = "Modular AI Orchestration System"
authors = ["Ioannis Karageorgos <ikarageo@aya.yale.edu>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/ecelab-org/noetik"
repository = "https://github.com/ecelab-org/noetik"
keywords = [
    "AI",
    "Agentic",
    "orchestration",
    "LLM",
    "tools",
    "memory",
    "modular",
    "system",
]
packages = [{ include = "noetik", from = "src" }]

[tool.poetry.dependencies]
python = "^3.11"
python-dotenv = "^1.1.0"
rich = "^14.0.0"
pydantic = "^2.11.4"
pydantic-settings = "^2.9.1"
uvicorn = "^0.34.2"
openai = "^1.77.0"
chromadb = "^1.0.7"

# Add other dependencies as needed
httpx = "^0.28.1"
anthropic = "^0.50.0"

[tool.poetry.group.dev.dependencies]
black = "^25.1.0"
ruff = "^0.11.8"
mypy = "^1.15.0"
pytest = "^8.3.5"
pytest-cov = "^6.1.1"

[tool.poetry.scripts]
noetik = "noetik.main:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100

[tool.ruff]
line-length = 100
select = ["E", "F", "I", "N"]

[tool.mypy]
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
